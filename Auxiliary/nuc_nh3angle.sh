#!/bin/bash
# AUXILIARY SCRIPT 
# DATE WRITTEN: JUNE 6, 2021
# DATE UPDATED: AUGUST 19, 2021
# PURPOSE: create an index file that groups atoms by their angle assignment in NH3

echo " "
echo " | AUXILIARY SCRIPT | GENERATE NH3 ANGLE INDEX | "
echo " "

# ========================================================
# -----------------    INTRODUCTION    -------------------
# ========================================================

# The ammonia structure modelled using the TraPPE forcefield
# requires it to be rigid (fixed bond length and bond angle).
# However, LINCS, the contraints algorithm used in GROMACS,
# is inefficient at applying constraints to structures 
# composed of several adjacent internal angles. Given this,
# the simulation of ammonia always crashes (LINCS WARNING). 
# 
# To better understand the crash occuring with LINCS, the 
# angles of ammonia through time is to be reported. This 
# is possible with gmx angle. For the command to recognize 
# where to compute the angles, an index file is required. 
# This script is used to generate such an index file.

# ========================================================
# ------------------    REMINDERS    ---------------------
# ========================================================

# 1. only works for production files labelled as: system_mdd*
#
# 2. the following files are required to be in the same directory:
#    a. structure file to be indexed 
#    
#    SPECIFIC FOR NSRI NUCLEATION PROJECT
#    - system_mdd{#}_{molec1}_{molec2}.gro
#
# 3. declare important variables in section I, for:
#    a. stucture file naming scheme
#    b. structure file to be indexed (.gro)
#    c. index name (.ndx)
# 
# 4. run script in csrc as
#    nohup ./nuc_nh3angle.sh > nohup.out &
#
# 5. the following files are generated by this script:
#    a. {name}.ndx
#
# 6. after activating this script, it is recommended 
#    to follow up by running:
#    a. nuc_anglerep.sh (generate angle reports)
#    b. nuc_anglegro.sh (generate snapshots of structures w/ extreme bending)

# ========================================================
# -------------------    SECTIONS    ---------------------
# ========================================================

# I.    DECLARE VARIABLES
#
# II.   DETERMINE SYSTEM
#
# III.  REGISTER STRUCTURE FILENAMES
#
# IV.   LOCATE NH3 INFO IN STRUCTURE FILE
#
# V.    REGISTER ATOM NUMBERS LOCATED
#
# VI.   ARRANGE ATOM NUMBERS INTO INDEX FILE

# <======================================================
# <==== I. DECLARE VARIABLES 
# <======================================================

ski=1   #1, auto-search of structure file ; 
        #0, use manually set name for structure file

tfi="system_mdd1_SOL_AMM.gro"               # manually set structure file to be indexed.
idx="tpr-in_mdd8-angle_ammonia_0ps.ndx"     # set name for index file.

# <======================================================
# <==== II. DETERMINE SYSTEM
# <======================================================

if [[ $ski == 1 ]]; then
ls system_mdd*.gro > list1.txt

detnme=$( tail -1 list1.txt )
molec1=${detnme:12:3}
molec2=${detnme:16:3}

# <======================================================
# <==== III. REGISTER STRUCTURE FILENAMES
# <======================================================

compvl=1
while read -r row
do
compvt=${row:10:1}
[[ $compvt -gt $compvl ]] && compvl=$compvt
done < list1.txt
rm list1.txt

checkc="000${compvl}"
alignc=$(echo $checkc | rev | cut -b 1-4 | rev)

[[ $compvl == 1 ]] &&
tfi="system_mdd${compvl}_${molec1}_${molec2}.gro" ||
tfi="system_mdd${compvl}_${molec1}_${molec2}.part${alignc}.gro"

fi

# <======================================================
# <==== IV. LOCATE NH3 INFO IN STRUCTURE FILE 
# <======================================================

echo "[ angles ]" > $idx
arn=0
tal=0
while read -r line
do 

if [[ "$line" == *"NH3"* ]]; then                       # determine if NH3 found in line
arn=$((arn+1))                                          # counts nth atom in NH3
att=$( echo $line | cut -d " " -f 2 | cut -c 3-7 )      # script is prepared for the moment atom letter (col. 2) and number id (col. 3) loses the space separating them.

# <======================================================
# <==== V. REGISTER ATOM NUMBERS LOCATED 
# <======================================================

 if [[ $att -ge 10000 ]]; then                          # by 10000 atoms, col. 2 and col.3 become one column
  if [[ $line == *" N1"* ]]; then
   idN1=$( echo $line | cut -d " " -f 2 | cut -c 3-7 )  # checks second column and only gets the integers
  elif [[ $line == *" H1"* ]]; then
   idH1=$( echo $line | cut -d " " -f 2 | cut -c 3-7 )  
  elif [[ $line == *" H2"* ]]; then
   idH2=$( echo $line | cut -d " " -f 2 | cut -c 3-7 )
  elif [[ $line == *" H3"* ]]; then
   idH3=$( echo $line | cut -d " " -f 2 | cut -c 3-7 )
  fi
 else
  if [[ $line == *" N1"* ]]; then
   idN1=$( echo $line | cut -d " " -f 3 )               # checks third column
  elif [[ $line == *" H1"* ]]; then
   idH1=$( echo $line | cut -d " " -f 3 )
  elif [[ $line == *" H2"* ]]; then
   idH2=$( echo $line | cut -d " " -f 3 )
  elif [[ $line == *" H3"* ]]; then
   idH3=$( echo $line | cut -d " " -f 3 )
  fi
 fi

# [ OPTIMIZATION CHECK ]
#
# Compare to awk command used in angsnap.sh

# <======================================================
# <==== VI. ARRANGE ATOM NUMBERS IN INDEX FILE
# <======================================================

 if [[ $arn == 5 ]]; then
  arn=0
  tal=$((tal+1))                                        # counts NH3
  echo " "
  echo "...MOLECULES READ: ${tal}"
  echo "${idH1} ${idN1} ${idH2}" >> $idx
  echo "${idH1} ${idN1} ${idH3}" >> $idx
  echo "${idH2} ${idN1} ${idH3}" >> $idx
  echo "   ANGLES RECORDED "
  echo " "
 fi

fi
done < $tfi

# =======================================================
# ------------------------ END --------------------------
# =======================================================

echo "...DONE"
echo " "

duration=$SECONDS
echo " | TIME ELAPSED: $(($duration / 60)) MINUTE/S and $(($duration % 60)) SECOND/S |"
echo " "
